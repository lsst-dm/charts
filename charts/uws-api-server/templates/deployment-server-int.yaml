apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "uws-api-server.fullname" . }}
  labels:
    app: {{ template "uws-api-server.fullname" . }}
    chart: {{ template "uws-api-server.chart" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "uws-api-server.fullname" . }}
  template:
    metadata:
      labels:
        app: {{ template "uws-api-server.fullname" . }}
    spec:
      securityContext:
        runAsUser: {{ .Values.server.securityContext.runAsUser }}
        runAsGroup: {{ .Values.server.securityContext.runAsGroup }}
        fsGroup: {{ .Values.server.securityContext.fsGroup }}
      serviceAccountName: {{ template "uws-api-server.fullname" . }}-job-manager
      volumes:
      - name: job-files
        persistentVolumeClaim:
          claimName: lsst-dm-scratch-pvc
      - name: project-files
        persistentVolumeClaim:
          claimName: lsst-dm-projects-pvc
      containers:
      - name: uws-api-server
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: Always
        command: ["/bin/bash", "-c", "cd server && python3 server.py"]
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: job-files
          mountPath: /uws
        - name: project-files
          mountPath: "/project/{{ .Values.projectSubpath }}"
          subPath: "{{ .Values.projectSubpath }}"
        env:
        - name: "UWS_ROOT_DIR"
          value: "/uws"
        - name: API_DOMAIN
          value: {{ template "uws-api-server.fullname" . }}
        - name: API_PORT
          value: "8080"
        - name: LOG_LEVEL
          value: "{{ .Values.logLevel | default "WARNING" }}"
        - name: TARGET_CLUSTER
          value: "{{ .Values.targetCluster }}"
        - name: PROJECT_SUBPATH
          value: "{{ .Values.projectSubpath }}"
