apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "uws-api-server.fullname" . }}
  labels:
    app: {{ template "uws-api-server.fullname" . }}
    chart: {{ template "uws-api-server.chart" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "uws-api-server.fullname" . }}
  template:
    metadata:
      labels:
        app: {{ template "uws-api-server.fullname" . }}
    spec:
      serviceAccountName: job-manager
      containers:
      - name: uws-api-server
        securityContext:
          runAsUser: 73006
          runAsGroup: 73006
          # fsGroup: 73006
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: Always
        command: ["/bin/bash", "-c", "cd server && python3 server.py"]
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: data
          mountPath: /lsstdata/offline/teststand
        - name: scratch
          # The mounted path was manually created by a sysadmin with the ownership 1001:1001
          mountPath: /scratch/uws
          subPath: uws
        env:
          - name: API_DOMAIN
            # Initially use the internal service name
            value: {{ template "uws-api-server.fullname" . }}
          - name: API_PORT
            value: "8080"
          - name: LOG_LEVEL
            value: "DEBUG"
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: nfs-data-pvc
      - name: scratch
        persistentVolumeClaim:
          claimName: nfs-scratch-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: uws-api-client
  labels:
    app: uws-api-client
    chart: {{ template "uws-api-server.chart" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: uws-api-client
  template:
    metadata:
      labels:
        app: uws-api-client
    spec:
      containers:
      - name: uws-api-client
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: Always
        command: ["/bin/bash", "-c", "sleep 86400"]
        env:
          - name: API_DOMAIN
            value: {{ template "uws-api-server.fullname" . }}
          - name: API_PORT
            value: "80"
        
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: uws-job-tester
#   labels:
#     app: uws-job-tester
#     chart: {{ template "uws-api-server.chart" . }}
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: uws-job-tester
#   template:
#     metadata:
#       labels:
#         app: uws-job-tester
#     spec:
#       volumes:
#       - name: job-scripts
#         configMap:
#           name: test-job-scripts
#       - name: data
#         persistentVolumeClaim:
#           claimName: nfs-data-pvc
#       - name: scratch
#         persistentVolumeClaim:
#           claimName: nfs-scratch-pvc
#       - name: nfs-oods-comcam
#         persistentVolumeClaim:
#           claimName: nfs-oods-comcam-pvc
#       containers:
#       - name: uws-job-tester
#         # The container runs with UID:GID = 1000:1000
#         image: 'lsstsqre/centos:7-stack-lsst_distrib-v21_0_0'
#         imagePullPolicy: IfNotPresent
#         command: ["/bin/bash", "-c", "sleep 86400"]
#         env:
#         - name: UWS_TEST_DIR
#           value: /scratch/uws/data/pipelines_check-21.0.0
#         volumeMounts:
#         - name: job-scripts
#           mountPath: '/opt/init.sh'
#           subPath: 'init.sh'
#         - name: data
#           mountPath: /lsstdata/offline/teststand
#         - name: scratch
#           mountPath: /scratch/uws
#           subPath: uws
#         - name: nfs-oods-comcam
#           mountPath: /data/lsstdata/comcam/oods/butler/repo
#           readOnly: true

