apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "uws-api-server.fullname" . }}
  labels:
    app: {{ template "uws-api-server.fullname" . }}
    chart: {{ template "uws-api-server.chart" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "uws-api-server.fullname" . }}
  template:
    metadata:
      labels:
        app: {{ template "uws-api-server.fullname" . }}
    spec:
      serviceAccountName: job-manager
      volumes:
      {{ if eq .Values.targetCluster "int" }}
      - name: job-files
        persistentVolumeClaim:
          claimName: lsst-dm-scratch-pvc
      - name: project-files
        persistentVolumeClaim:
          claimName: lsst-dm-projects-pvc
      # - name: repo-files
      #   persistentVolumeClaim:
      #     claimName: lsst-dm-repo-pvc
      {{ else if eq .Values.targetCluster "nts" }}
      - name: job-files
        persistentVolumeClaim:
          claimName: nfs-scratch-pvc
      {{ end }}
      containers:
      - name: uws-api-server
        securityContext:
          runAsUser: 1000
          runAsGroup: 202
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: Always
        command: ["/bin/bash", "-c", "cd server && python3 server.py"]
        ports:
        - containerPort: 8080
        volumeMounts:
        {{ if eq .Values.targetCluster "int" }}
        - name: job-files
          mountPath: /uws
        - name: project-files
          mountPath: /project/krughoff/projects
          subPath: krughoff/projects
        # - name: repo-files
        #   mountPath: /repo
        #   readOnly: true
        {{ else if eq .Values.targetCluster "nts" }}
        - name: job-files
          mountPath: /uws
        {{ end }}
        env:
          - name: "UWS_ROOT_DIR"
            value: "/uws"
          - name: API_DOMAIN
            value: {{ template "uws-api-server.fullname" . }}
          - name: API_PORT
            value: "8080"
          - name: LOG_LEVEL
            value: "DEBUG"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: uws-api-client
  labels:
    app: uws-api-client
    chart: {{ template "uws-api-server.chart" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: uws-api-client
  template:
    metadata:
      labels:
        app: uws-api-client
    spec:
      containers:
      - name: uws-api-client
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: Always
        command: ["/bin/bash", "-c", "sleep 1000d"]
        env:
          - name: API_DOMAIN
            value: {{ template "uws-api-server.fullname" . }}
          - name: API_PORT
            value: "80"
